
 
prometheus_endpoint: 'http://localhost'
prometheus_config_template: '/tmp/original_prometheus_config.yaml'
prometheus_config_target: '/tmp/prometheus_config.yaml'
prometheus_rules_directory: '/var/lib/micado/prometheus/config'

docker_node_unreachable_timeout: 120

k8s_endpoint: 'http://192.168.154.97:2375'

occopus_endpoint: 'http://localhost:5000'
occopus_infra_name: 'micado_worker_infra'
occopus_worker_name: 'worker'

optimizer_endpoint: 'http://localhost:2345'

optimizer_vars_prefix_init: 'm_opt_init_'
optimizer_vars_prefix_input: 'm_opt_input_'
optimizer_vars_prefix_target: 'm_opt_target_'
optimizer_vars_prefix_target_query: 'query_'
optimizer_vars_prefix_target_minth: 'minth_'
optimizer_vars_prefix_target_maxth: 'maxth_'


logging:
    version: 1
    root:
        level: DEBUG
        handlers: [console, file]
    formatters:
        simpleFormatter:
            #format: "%(module)s %(asctime)s %(levelname)s %(message)s"
            format: "%(asctime)s %(levelname)s %(message)s"
        usercodeFormatter:
            format: "%(message)s"
    handlers:
        console:
            class: logging.StreamHandler
            formatter: simpleFormatter
            level: DEBUG
            stream: ext://sys.stdout
        file:
            class : logging.FileHandler
            formatter: simpleFormatter
            mode: w
            level: DEBUG
            filename: pk.log
        file_usercode:
            class : logging.FileHandler
            formatter: usercodeFormatter
            mode: w
            level: DEBUG
            filename: pk_usercode.log
    loggers:
        pk:
            propagate: false
            handlers: [console, file]
        pk_k8s:
            propagate: false
            handlers: [console, file]
        pk_prometheus:
            propagate: true
            handlers: [console, file]
        pk_optimizer:
            propagate: false
            handlers: [console, file]
        pk_usercode:
            propagate: false
            handlers: [file_usercode]


